server:
  port: ${PORT}

spring:
  config:
    import: file:.env[.properties]
  profiles:
    include: jwt
  application:
    name: UACV
  output:
    ansi:
      enabled: always
  data:
    mongodb:
      uri: ${MONGO_URI}
      database: ${MONGO_DB}
      username: ${MONGO_USER}
      password: ${MONGO_PW}
  datasource:
    hikari:
      driver-class-name: ${MYSQL_DRIVER}
      jdbc-url: ${MYSQL_URL}
      username: ${MYSQL_USER}
      password: ${MYSQL_PW}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    exchange: amq.topic
    queues:
      sensor:
        name: sensor_queue
        routing-keys:
          - rpi.sensor
      sound:
        name: sound_queue
        routing-keys:
          - orin.sensor
      command:
        name: command_queue
        routing-keys:
          - rpi.fire
          - orin.cannon
          - orin.throttle
          - orin.steer

logging:
  level:
    root: ${LOG_LEVEL:INFO}
    org.hibernate.SQL: debug

jwt:
  secret: ${JWT_SECRET_KEY}
  access:
    header: Authorization
  refresh:
    header: Authorization-refresh

websocket:
  stomp:
    endpoint: /socket/sound
    allowed-origins: "*"
    broker:
      prefix: /orin  # 클라이언트가 구독할 경로로 설정 (이 경우 /orin/sensor)